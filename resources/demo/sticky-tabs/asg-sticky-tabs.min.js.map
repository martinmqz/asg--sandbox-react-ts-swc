{"version":3,"file":"asg-sticky-tabs.min.js","sources":["../src/config.js","../src/doms.js","../src/helpers.js","../src/listeners.js","../src/index.js"],"sourcesContent":["\r\nconst config = {\r\n  type: 'simple', // simple (default), vpanel\r\n  cssClass: 'sticky', // 'stickytabs-sticky',\r\n  speed: 750, // scrolling time in milliseconds\r\n  isIE11: !!window.MSInputMethodContext && !!document.documentMode,\r\n  activeNavLinkCssClass: 'active',\r\n  activeContentCssClass: 'active',\r\n  anchorParentCssClass: 'sticky-tab-panel',\r\n  skipPaneCssClass: 'stickytabs-skip',\r\n  lastPaneCssClass: 'stickytabs-last'\r\n}\r\n\r\nexport default config\r\n","\r\nconst doms = {\r\n  // Page elements\r\n  pageContentElem: document.getElementById('campaign-page'), // asg container\r\n  pageHeaderElem: document.querySelector('header'), // asg header\r\n  defaultAnchorElem: document.querySelector('footer'), // used as barrier/last item to take as reference\r\n  // Sticky-Tabs elements\r\n  navElem: document.getElementById('stickytabs'),\r\n  navLinks: document.querySelectorAll('#stickytabs>a'),\r\n  navWrapperElem: document.getElementById('stickytabs-wrapper'),\r\n  barElem: document.getElementById('stickytabs-bar'),\r\n  panelElem: document.getElementById('stickytabs-panel'),\r\n  anchorElems: document.querySelectorAll('.stickytabs-anchor'),\r\n  paneElems: document.getElementsByClassName('stickytabs-pane')\r\n}\r\n\r\nexport default doms\r\n","\r\nimport config from './config'\r\nimport doms from './doms'\r\n\r\n/**\r\n *\r\n */\r\nfunction init () {\r\n  if (doms.navElem.dataset.type && doms.navElem.dataset.type !== 'simple') {\r\n    config.type = doms.navElem.dataset.type // overwrite default\r\n  }\r\n\r\n  if (config.type !== 'simple') {\r\n    _defineVirtualPanes()\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the current window's scroll amount\r\n */\r\nfunction getScrollY () {\r\n  return document.documentElement.scrollTop\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction getNavTopOffset () {\r\n  return $(doms.navWrapperElem).offset().top\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} isReset\r\n */\r\nfunction resizeNav (isReset) {\r\n  if (isReset) {\r\n    doms.navElem.style.removeProperty('width')\r\n  } else {\r\n    doms.navElem.style.width = _getPageContentWidth() + 'px'\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction resizeNavBar () {\r\n  if (!doms.barElem) {\r\n    return\r\n  } // else...\r\n\r\n  if (doms.barElem.offsetHeight !== doms.navElem.offsetHeight) {\r\n    doms.barElem.style.height = doms.navWrapperElem.offsetHeight + 'px' // match heights\r\n  } // else... heights already matching\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction stick () {\r\n  doms.navElem.classList.add(config.cssClass)\r\n  resizeNav()\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction unstick () {\r\n  _resetAnchorsStyle()\r\n  doms.navElem.classList.remove(config.cssClass)\r\n  resizeNav(true)\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction isStuck () {\r\n  return doms.navElem.classList.contains(config.cssClass)\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction resizeNavWrapper () {\r\n  // doms.navbarWrapperElem.style.height = doms.navbarWrapperElem.offsetHeight + 'px'\r\n  // if (doms.navElem.offsetHeight > 0) {\r\n  doms.navWrapperElem.style.height = doms.navElem.offsetHeight + 'px'\r\n  // }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} hash Optional\r\n */\r\nfunction buildMobileNav (hash) {\r\n  const dropdownElem = document.createElement('select')\r\n  dropdownElem.classList.add('custom-select')\r\n  let optionElem = null\r\n  let navLink = null\r\n  for (let i = 0; i < doms.navLinks.length; i++) {\r\n    navLink = doms.navLinks[i]\r\n    optionElem = document.createElement('option')\r\n    optionElem.value = navLink.hash\r\n    optionElem.text = navLink.innerText\r\n    if (hash && optionElem.value === hash) {\r\n      optionElem.selected = true\r\n    }\r\n    dropdownElem.appendChild(optionElem)\r\n  }\r\n\r\n  return _bindNavDropdown(dropdownElem)\r\n}\r\n\r\n/**\r\n *\r\n * @param {String} hash Hash string\r\n * @returns true\r\n */\r\nfunction processView (hash) {\r\n  const anchorElem = _getAnchorByHash(hash)\r\n\r\n  if (_isDropdownVisible()) {\r\n    _activateDropdownItem(anchorElem)\r\n  } else {\r\n    _activateNavLink(anchorElem)\r\n    _activateContentPane(anchorElem)\r\n  }\r\n\r\n  if (hash !== null) {\r\n    _setAnchorsStyle()\r\n\r\n    if (_isDropdownVisible()) {\r\n      _scrollToElement(anchorElem) // Scroll always on mobile\r\n    } else if (!isStuck()) {\r\n      _scrollToElement(anchorElem) // Scroll only when bar is not already fixed\r\n    }\r\n    // else no scroll at all since dropdown is not visible, and bar is stuck\r\n  }\r\n  // else no scroll at all, since there is not anchor-id (hash) to scroll to\r\n  return true\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} element\r\n * @param {*} callback\r\n */\r\nfunction _scrollToElement (element, isNoDelay) {\r\n  if (element === null) {\r\n    return\r\n  } // else...\r\n\r\n  const positionY = $(element).offset().top // - doms.navWrapperElem.offsetHeight\r\n  const extra = 0 // -12 // adjust accordingly // tight to nav links margin\r\n\r\n  if (isNoDelay === true) {\r\n    scrollTo(0, positionY)\r\n  } else {\r\n    $('html').animate({ scrollTop: positionY + extra }, config.speed)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction _getPageContentWidth () {\r\n  return $(doms.pageContentElem).width()\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} dropdownElem\r\n */\r\nfunction _bindNavDropdown (dropdownElem) {\r\n  dropdownElem.addEventListener('change', function (e) {\r\n    location.hash = dropdownElem.value\r\n  })\r\n\r\n  return dropdownElem\r\n}\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} navLink\r\n * @returns\r\n */\r\nfunction _activateDropdownItem (navLink) {\r\n  const dropdownElem = doms.navElem.querySelector('select')\r\n  if (!dropdownElem || !navLink) {\r\n    return\r\n  } // else...\r\n\r\n  for (let i = 0; i < dropdownElem.length; i++) {\r\n    if (dropdownElem.item(i).value === navLink.hash) {\r\n      dropdownElem.item(i).selected = true\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns anchor with id=hash-value, or First anchor by default\r\n * @param {String} hash Hash string\r\n * @returns HTMLElement\r\n */\r\nfunction _getAnchorByHash (hash) {\r\n  if (!hash) {\r\n    return doms.anchorElems.item(0)\r\n  }\r\n  // else...\r\n  const anchorId = hash.split('#')[1]\r\n  return document.getElementById(anchorId)\r\n}\r\n\r\n/**\r\n * Selects nav link\r\n */\r\nfunction _activateNavLink (anchorElem) {\r\n  doms.navLinks.forEach(function (link) {\r\n    if (link.hash === '#' + anchorElem.id) {\r\n      link.classList.add(config.activeNavLinkCssClass)\r\n      link.ariaSelected = true\r\n    } else {\r\n      link.classList.remove(config.activeNavLinkCssClass)\r\n      link.ariaSelected = false\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Show content pane element by nav-link index\r\n */\r\nfunction _activateContentPane (anchorElem) {\r\n  if (config.type === 'simple') {\r\n    const paneElem = anchorElem.parentElement\r\n    paneElem.classList.add(config.activeContentCssClass)\r\n    return\r\n  }\r\n  // else...\r\n\r\n  const vpaneElems = document.querySelectorAll('.stickytabs-vpane')\r\n\r\n  // First show active-to-be elements\r\n  vpaneElems.forEach(function (vpaneElem) {\r\n    if (vpaneElem.dataset.anchor === anchorElem.id) {\r\n      vpaneElem.classList.add(config.activeContentCssClass)\r\n    }\r\n  })\r\n\r\n  // Then deactivate the rest elements\r\n  vpaneElems.forEach(function (vpaneElem) {\r\n    if (vpaneElem.dataset.anchor !== anchorElem.id) {\r\n      vpaneElem.classList.remove(config.activeContentCssClass)\r\n    }\r\n  })\r\n\r\n  if (isStuck()) {\r\n    _scrollToElement(anchorElem, true)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @returns Nothing\r\n */\r\nfunction _defineVirtualPanes () {\r\n  if (doms.anchorElems.length < 1) {\r\n    console.warn('ASG:: No anchor elements')\r\n    return // exit, nothing to process\r\n  } // else...\r\n\r\n  // Start with the anchors' container elements\r\n  doms.anchorElems.forEach(function (anchorElem) {\r\n    anchorElem.closest(`.${config.anchorParentCssClass}`).classList.add('stickytabs-vpane')\r\n    anchorElem.closest(`.${config.anchorParentCssClass}`).dataset.anchor = anchorElem.id\r\n  })\r\n\r\n  // Then do the in-between elements\r\n  const anchorParent = doms.anchorElems.item(0).closest(`.${config.anchorParentCssClass}`)\r\n\r\n  let _anchorId = null\r\n  let _parentSibling = anchorParent\r\n\r\n  while (_parentSibling) {\r\n    if (_parentSibling.dataset.anchor) {\r\n      _anchorId = _parentSibling.dataset.anchor\r\n      _parentSibling = _parentSibling.nextElementSibling // Reassign before continuing!\r\n      continue // Skip it since already has these attributes\r\n    } // else...\r\n\r\n    // Should skip?\r\n    if (_parentSibling.querySelector('.' + config.skipPaneCssClass)) {\r\n      continue // skip\r\n    } // else...\r\n\r\n    // Add attributes\r\n    _parentSibling.classList.add('stickytabs-vpane')\r\n    _parentSibling.dataset.anchor = _anchorId\r\n\r\n    if (_parentSibling.querySelector('.' + config.lastPaneCssClass)) {\r\n      break // reached end of tab contents\r\n    }\r\n\r\n    // Next\r\n    _parentSibling = _parentSibling.nextElementSibling\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @returns Boolean\r\n */\r\nfunction _isDropdownVisible () {\r\n  const dropdownElem = doms.navElem.querySelector('select')\r\n\r\n  if (!dropdownElem) return false\r\n  // else...\r\n  const ddDisplayVal = window.getComputedStyle(dropdownElem).getPropertyValue('display')\r\n  return ddDisplayVal !== 'none'\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction _setAnchorsStyle () {\r\n  doms.anchorElems.forEach(function (el) {\r\n    el.style.paddingTop = doms.navWrapperElem.offsetHeight + 'px' // To account for navbar height\r\n  })\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction _resetAnchorsStyle () {\r\n  $('.stickytabs-anchor').animate({ paddingTop: 0 }, config.speed / 2)\r\n}\r\n\r\n//\r\n/// Exports\r\nexport {\r\n  init,\r\n  getScrollY,\r\n  getNavTopOffset,\r\n  resizeNav,\r\n  stick,\r\n  unstick,\r\n  isStuck,\r\n  resizeNavWrapper,\r\n  buildMobileNav,\r\n  resizeNavBar,\r\n  processView,\r\n  _defineVirtualPanes\r\n}\r\n","import doms from './doms'\r\nimport { getScrollY, stick, resizeNav, getNavTopOffset, unstick, isStuck, resizeNavWrapper, buildMobileNav, resizeNavBar, processView } from './helpers'\r\n\r\n//\r\n/// Event Binding\r\n\r\n/**\r\n *\r\n * @param {Object} e Event\r\n */\r\nfunction onWindowLoad (e) {\r\n  doms.navLinks.forEach(function (link) {\r\n    link.addEventListener('click', onNavLinkClick)\r\n  })\r\n\r\n  setTimeout(function () {\r\n    processView(location.hash || null)\r\n\r\n    // Stick if landing on scrolled page - check again\r\n    if (getScrollY() > getNavTopOffset()) {\r\n      stick()\r\n    }\r\n\r\n    resizeNav()\r\n    resizeNavWrapper()\r\n    resizeNavBar()\r\n  },\r\n  600) // give page some time to load elements\r\n\r\n  const dropdownElem = buildMobileNav()\r\n  doms.navElem.insertAdjacentElement('beforeend', dropdownElem)\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} e Event\r\n */\r\nfunction onScroll (e) {\r\n  if (getScrollY() >= getNavTopOffset()) {\r\n    stick()\r\n  } else {\r\n    if (isStuck()) {\r\n      unstick()\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Triggered only on back & forward navigation, and on page load (when hash is on URL). Not on navLink click\r\n * @param {*} e Event\r\n * @returns Nothing\r\n */\r\nfunction onHashChange (e) {\r\n  processView(location.hash)\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} e Event\r\n */\r\nfunction onWindowResize (e) {\r\n  resizeNav()\r\n  resizeNavWrapper()\r\n  resizeNavBar()\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} e Event\r\n */\r\nfunction onNavLinkClick (e) {\r\n  e.preventDefault()\r\n\r\n  const id = this.hash.split('#')[1]\r\n  location.hash = id\r\n}\r\n\r\nexport {\r\n  onWindowLoad,\r\n  onWindowResize,\r\n  onScroll,\r\n  onHashChange,\r\n  onNavLinkClick\r\n}\r\n","import { init } from './helpers'\r\nimport { onWindowResize, onScroll, onWindowLoad, onHashChange } from './listeners'\r\nimport './style.css'\r\n\r\n//\r\n/// Init\r\ninit()\r\nwindow.addEventListener('load', onWindowLoad)\r\ndocument.addEventListener('scroll', onScroll)\r\nwindow.addEventListener('resize', onWindowResize)\r\nwindow.addEventListener('hashchange', onHashChange)\r\n"],"names":["config","type","cssClass","speed","isIE11","window","MSInputMethodContext","document","documentMode","activeNavLinkCssClass","activeContentCssClass","anchorParentCssClass","skipPaneCssClass","lastPaneCssClass","doms","pageContentElem","getElementById","pageHeaderElem","querySelector","defaultAnchorElem","navElem","navLinks","querySelectorAll","navWrapperElem","barElem","panelElem","anchorElems","paneElems","getElementsByClassName","getScrollY","documentElement","scrollTop","getNavTopOffset","$","offset","top","resizeNav","isReset","style","removeProperty","width","resizeNavBar","offsetHeight","height","stick","classList","add","unstick","animate","paddingTop","remove","isStuck","contains","resizeNavWrapper","buildMobileNav","hash","dropdownElem","createElement","optionElem","navLink","i","length","value","text","innerText","selected","appendChild","addEventListener","e","location","_bindNavDropdown","processView","anchorElem","item","anchorId","split","_getAnchorByHash","_isDropdownVisible","_activateDropdownItem","forEach","link","id","ariaSelected","_activateNavLink","parentElement","vpaneElems","vpaneElem","dataset","anchor","_scrollToElement","_activateContentPane","el","element","isNoDelay","positionY","scrollTo","getComputedStyle","getPropertyValue","onNavLinkClick","preventDefault","this","console","warn","closest","anchorParent","_anchorId","_parentSibling","nextElementSibling","_defineVirtualPanes","setTimeout","insertAdjacentElement"],"mappings":"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"}